# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(amosinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/config/amos.mk
bin_PROGRAMS = arrive$(EXEEXT) arrive2$(EXEEXT) \
	genome-complexity$(EXEEXT) genome-complexity-fast$(EXEEXT) \
	count-kmers$(EXEEXT) find-tandem$(EXEEXT) count-qmers$(EXEEXT) \
	qmer-filter$(EXEEXT) frg-umd-merge$(EXEEXT) gap-links$(EXEEXT) \
	hash-overlap$(EXEEXT) kmer-count$(EXEEXT) kmer-cov$(EXEEXT) \
	kmer-cov-plot$(EXEEXT) make-consensus$(EXEEXT) \
	make-consensus_poly$(EXEEXT) merge-contigs$(EXEEXT) \
	missing-reads$(EXEEXT) ovl-degr-dist$(EXEEXT) \
	overlap-align$(EXEEXT) readinfo2cam$(EXEEXT) \
	running-cmp$(EXEEXT) show-ma-asm$(EXEEXT) \
	sim-cover-depth$(EXEEXT) sim-cover2$(EXEEXT) \
	sim-shotgun$(EXEEXT) simple-overlap$(EXEEXT) \
	verify-layout$(EXEEXT)
check_PROGRAMS = maligntest$(EXEEXT) test-align$(EXEEXT)
subdir = src/Align
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/amos.m4 \
	$(top_srcdir)/config/getopt.m4 \
	$(top_srcdir)/config/onceonly_2_57.m4 \
	$(top_srcdir)/config/perlmodules.m4 \
	$(top_srcdir)/config/strtod.m4 $(top_srcdir)/config/strtol.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(amoslibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(amosincludedir)"
LIBRARIES = $(amoslib_LIBRARIES)
AR = ar
ARFLAGS = cru
libAlign_a_AR = $(AR) $(ARFLAGS)
libAlign_a_LIBADD =
am_libAlign_a_OBJECTS = align.$(OBJEXT)
libAlign_a_OBJECTS = $(am_libAlign_a_OBJECTS)
libAlign_poly_a_AR = $(AR) $(ARFLAGS)
libAlign_poly_a_LIBADD =
am_libAlign_poly_a_OBJECTS = align_poly.$(OBJEXT)
libAlign_poly_a_OBJECTS = $(am_libAlign_poly_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_arrive_OBJECTS = arrive.$(OBJEXT)
arrive_OBJECTS = $(am_arrive_OBJECTS)
arrive_LDADD = $(LDADD)
am_arrive2_OBJECTS = arrive2.$(OBJEXT)
arrive2_OBJECTS = $(am_arrive2_OBJECTS)
arrive2_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_count_kmers_OBJECTS = count-kmers.$(OBJEXT)
count_kmers_OBJECTS = $(am_count_kmers_OBJECTS)
count_kmers_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a
am_count_qmers_OBJECTS = count-qmers.$(OBJEXT)
count_qmers_OBJECTS = $(am_count_qmers_OBJECTS)
count_qmers_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a
am_find_tandem_OBJECTS = find-tandem.$(OBJEXT)
find_tandem_OBJECTS = $(am_find_tandem_OBJECTS)
find_tandem_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a
am_frg_umd_merge_OBJECTS = frg-umd-merge.$(OBJEXT)
frg_umd_merge_OBJECTS = $(am_frg_umd_merge_OBJECTS)
frg_umd_merge_DEPENDENCIES = $(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_gap_links_OBJECTS = gap-links.$(OBJEXT)
gap_links_OBJECTS = $(am_gap_links_OBJECTS)
gap_links_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_genome_complexity_OBJECTS = genome-complexity-fast.$(OBJEXT)
genome_complexity_OBJECTS = $(am_genome_complexity_OBJECTS)
genome_complexity_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a
am_genome_complexity_fast_OBJECTS = genome-complexity-fast.$(OBJEXT)
genome_complexity_fast_OBJECTS = $(am_genome_complexity_fast_OBJECTS)
genome_complexity_fast_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a
am_hash_overlap_OBJECTS = hash-overlap.$(OBJEXT)
hash_overlap_OBJECTS = $(am_hash_overlap_OBJECTS)
hash_overlap_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_kmer_count_OBJECTS = kmer-count.$(OBJEXT)
kmer_count_OBJECTS = $(am_kmer_count_OBJECTS)
kmer_count_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_kmer_cov_OBJECTS = kmer-cov.$(OBJEXT)
kmer_cov_OBJECTS = $(am_kmer_cov_OBJECTS)
kmer_cov_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_kmer_cov_plot_OBJECTS = kmer-cov-plot.$(OBJEXT)
kmer_cov_plot_OBJECTS = $(am_kmer_cov_plot_OBJECTS)
kmer_cov_plot_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_make_consensus_OBJECTS = make-consensus.$(OBJEXT)
make_consensus_OBJECTS = $(am_make_consensus_OBJECTS)
make_consensus_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_make_consensus_poly_OBJECTS = make-consensus_poly.$(OBJEXT)
make_consensus_poly_OBJECTS = $(am_make_consensus_poly_OBJECTS)
make_consensus_poly_DEPENDENCIES =  \
	$(top_builddir)/src/Align/libAlign_poly.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_maligntest_OBJECTS = maligntest.$(OBJEXT)
maligntest_OBJECTS = $(am_maligntest_OBJECTS)
maligntest_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_merge_contigs_OBJECTS = merge-contigs.$(OBJEXT)
merge_contigs_OBJECTS = $(am_merge_contigs_OBJECTS)
merge_contigs_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_missing_reads_OBJECTS = missing-reads.$(OBJEXT)
missing_reads_OBJECTS = $(am_missing_reads_OBJECTS)
missing_reads_LDADD = $(LDADD)
am_overlap_align_OBJECTS = overlap-align.$(OBJEXT)
overlap_align_OBJECTS = $(am_overlap_align_OBJECTS)
overlap_align_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_ovl_degr_dist_OBJECTS = ovl-degr-dist.$(OBJEXT)
ovl_degr_dist_OBJECTS = $(am_ovl_degr_dist_OBJECTS)
ovl_degr_dist_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_qmer_filter_OBJECTS = qmer-filter.$(OBJEXT)
qmer_filter_OBJECTS = $(am_qmer_filter_OBJECTS)
qmer_filter_LDADD = $(LDADD)
am_readinfo2cam_OBJECTS = readinfo2cam.$(OBJEXT)
readinfo2cam_OBJECTS = $(am_readinfo2cam_OBJECTS)
readinfo2cam_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_running_cmp_OBJECTS = running-cmp.$(OBJEXT)
running_cmp_OBJECTS = $(am_running_cmp_OBJECTS)
running_cmp_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_show_ma_asm_OBJECTS = show-ma-asm.$(OBJEXT)
show_ma_asm_OBJECTS = $(am_show_ma_asm_OBJECTS)
show_ma_asm_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_sim_cover_depth_OBJECTS = sim-cover-depth.$(OBJEXT)
sim_cover_depth_OBJECTS = $(am_sim_cover_depth_OBJECTS)
sim_cover_depth_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_sim_cover2_OBJECTS = sim-cover2.$(OBJEXT)
sim_cover2_OBJECTS = $(am_sim_cover2_OBJECTS)
sim_cover2_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_sim_shotgun_OBJECTS = sim-shotgun.$(OBJEXT)
sim_shotgun_OBJECTS = $(am_sim_shotgun_OBJECTS)
sim_shotgun_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a
am_simple_overlap_OBJECTS = simple-overlap.$(OBJEXT)
simple_overlap_OBJECTS = $(am_simple_overlap_OBJECTS)
simple_overlap_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_test_align_OBJECTS = test-align.$(OBJEXT)
test_align_OBJECTS = $(am_test_align_OBJECTS)
test_align_DEPENDENCIES = $(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_verify_layout_OBJECTS = verify-layout.$(OBJEXT)
verify_layout_OBJECTS = $(am_verify_layout_OBJECTS)
verify_layout_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libAlign_a_SOURCES) $(libAlign_poly_a_SOURCES) \
	$(arrive_SOURCES) $(arrive2_SOURCES) $(count_kmers_SOURCES) \
	$(count_qmers_SOURCES) $(find_tandem_SOURCES) \
	$(frg_umd_merge_SOURCES) $(gap_links_SOURCES) \
	$(genome_complexity_SOURCES) $(genome_complexity_fast_SOURCES) \
	$(hash_overlap_SOURCES) $(kmer_count_SOURCES) \
	$(kmer_cov_SOURCES) $(kmer_cov_plot_SOURCES) \
	$(make_consensus_SOURCES) $(make_consensus_poly_SOURCES) \
	$(maligntest_SOURCES) $(merge_contigs_SOURCES) \
	$(missing_reads_SOURCES) $(overlap_align_SOURCES) \
	$(ovl_degr_dist_SOURCES) $(qmer_filter_SOURCES) \
	$(readinfo2cam_SOURCES) $(running_cmp_SOURCES) \
	$(show_ma_asm_SOURCES) $(sim_cover_depth_SOURCES) \
	$(sim_cover2_SOURCES) $(sim_shotgun_SOURCES) \
	$(simple_overlap_SOURCES) $(test_align_SOURCES) \
	$(verify_layout_SOURCES)
DIST_SOURCES = $(libAlign_a_SOURCES) $(libAlign_poly_a_SOURCES) \
	$(arrive_SOURCES) $(arrive2_SOURCES) $(count_kmers_SOURCES) \
	$(count_qmers_SOURCES) $(find_tandem_SOURCES) \
	$(frg_umd_merge_SOURCES) $(gap_links_SOURCES) \
	$(genome_complexity_SOURCES) $(genome_complexity_fast_SOURCES) \
	$(hash_overlap_SOURCES) $(kmer_count_SOURCES) \
	$(kmer_cov_SOURCES) $(kmer_cov_plot_SOURCES) \
	$(make_consensus_SOURCES) $(make_consensus_poly_SOURCES) \
	$(maligntest_SOURCES) $(merge_contigs_SOURCES) \
	$(missing_reads_SOURCES) $(overlap_align_SOURCES) \
	$(ovl_degr_dist_SOURCES) $(qmer_filter_SOURCES) \
	$(readinfo2cam_SOURCES) $(running_cmp_SOURCES) \
	$(show_ma_asm_SOURCES) $(sim_cover_depth_SOURCES) \
	$(sim_cover2_SOURCES) $(sim_shotgun_SOURCES) \
	$(simple_overlap_SOURCES) $(test_align_SOURCES) \
	$(verify_layout_SOURCES)
HEADERS = $(amosinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAT = @BLAT@
BOOST_CXXFLAGS = @BOOST_CXXFLAGS@
BOOST_DIR = @BOOST_DIR@
CA_CXXFLAGS = @CA_CXXFLAGS@
CA_DIR = @CA_DIR@
CA_LDADD = @CA_LDADD@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DELTAFILTER = @DELTAFILTER@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETOPT_H = @GETOPT_H@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NUCMER = @NUCMER@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
POW_LIB = @POW_LIB@
PYTHON = @PYTHON@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_LIBS = @QT_LIBS@
QT_MOC = @QT_MOC@
QT_QMAKE = @QT_QMAKE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOWCOORDS = @SHOWCOORDS@
STRIP = @STRIP@
VERSION = @VERSION@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
amosincludedir = @amosincludedir@
amoslibdir = @amoslibdir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
tigrincludedir = @tigrincludedir@
tigrlibdir = @tigrlibdir@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
amoslib_LIBRARIES = \
	libAlign.a \
	libAlign_poly.a

amosinclude_HEADERS = \
	align.hh \
	align_poly.hh \
	matrix.hh

AM_CPPFLAGS = \
	-I$(top_srcdir)/src/CelMsg \
	-I$(top_srcdir)/src/Slice \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU \
	-I$(top_srcdir)/src/Foundation

arrive_SOURCES = \
	arrive.cc

arrive2_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

arrive2_SOURCES = \
	arrive2.cc

count_kmers_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
    $(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a

count_kmers_SOURCES = \
	count-kmers.cc

find_tandem_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
    $(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a

find_tandem_SOURCES = \
	find-tandem.cc

count_qmers_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
    $(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a

count_qmers_SOURCES = \
	count-qmers.cc

qmer_filter_SOURCES = \
	qmer-filter.cc

frg_umd_merge_LDADD = \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

frg_umd_merge_SOURCES = \
	frg-umd-merge.cc

gap_links_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

gap_links_SOURCES = \
	gap-links.cc

genome_complexity_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
    	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a

genome_complexity_SOURCES = \
	genome-complexity-fast.cc

genome_complexity_fast_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
    	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a

genome_complexity_fast_SOURCES = \
	genome-complexity-fast.cc

hash_overlap_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

hash_overlap_SOURCES = \
	hash-overlap.cc \
	hash-overlap.hh

kmer_count_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

kmer_count_SOURCES = \
	kmer-count.cc

kmer_cov_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

kmer_cov_SOURCES = \
	kmer-cov.cc

kmer_cov_plot_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

kmer_cov_plot_SOURCES = \
	kmer-cov-plot.cc

overlap_align_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

overlap_align_SOURCES = \
	overlap-align.cc

make_consensus_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

make_consensus_SOURCES = \
	make-consensus.cc

make_consensus_poly_LDADD = \
	$(top_builddir)/src/Align/libAlign_poly.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

make_consensus_poly_SOURCES = \
	make-consensus_poly.cc

maligntest_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

maligntest_SOURCES = \
	maligntest.cc

merge_contigs_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

merge_contigs_SOURCES = \
	merge-contigs.cc

missing_reads_SOURCES = \
	missing-reads.cc

ovl_degr_dist_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

ovl_degr_dist_SOURCES = \
	ovl-degr-dist.cc

readinfo2cam_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

readinfo2cam_SOURCES = \
	readinfo2cam.cc

running_cmp_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

running_cmp_SOURCES = \
	running-cmp.cc

show_ma_asm_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

show_ma_asm_SOURCES = \
	show-ma-asm.cc

sim_cover_depth_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

sim_cover_depth_SOURCES = \
	sim-cover-depth.cc

sim_cover2_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

sim_cover2_SOURCES = \
	sim-cover2.cc

sim_shotgun_LDADD = \
	$(top_builddir)/src/Common/libCommon.a

sim_shotgun_SOURCES = \
	sim-shotgun.cc

simple_overlap_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

simple_overlap_SOURCES = \
	simple-overlap.cc \
	simple-overlap.hh

test_align_LDADD = \
	$(top_builddir)/src/Align/libAlign.a \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Slice/libSlice.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

test_align_SOURCES = \
	test-align.cc

verify_layout_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/GNU/libGNU.a

verify_layout_SOURCES = \
	verify-layout.cc

libAlign_a_SOURCES = \
	align.cc

libAlign_poly_a_SOURCES = \
	align_poly.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/amos.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Align/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Align/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-amoslibLIBRARIES: $(amoslib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(amoslibdir)" || $(MKDIR_P) "$(DESTDIR)$(amoslibdir)"
	@list='$(amoslib_LIBRARIES)'; test -n "$(amoslibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(amoslibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(amoslibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(amoslib_LIBRARIES)'; test -n "$(amoslibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(amoslibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(amoslibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-amoslibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(amoslib_LIBRARIES)'; test -n "$(amoslibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(amoslibdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(amoslibdir)" && rm -f $$files

clean-amoslibLIBRARIES:
	-test -z "$(amoslib_LIBRARIES)" || rm -f $(amoslib_LIBRARIES)
libAlign.a: $(libAlign_a_OBJECTS) $(libAlign_a_DEPENDENCIES) 
	-rm -f libAlign.a
	$(libAlign_a_AR) libAlign.a $(libAlign_a_OBJECTS) $(libAlign_a_LIBADD)
	$(RANLIB) libAlign.a
libAlign_poly.a: $(libAlign_poly_a_OBJECTS) $(libAlign_poly_a_DEPENDENCIES) 
	-rm -f libAlign_poly.a
	$(libAlign_poly_a_AR) libAlign_poly.a $(libAlign_poly_a_OBJECTS) $(libAlign_poly_a_LIBADD)
	$(RANLIB) libAlign_poly.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
arrive$(EXEEXT): $(arrive_OBJECTS) $(arrive_DEPENDENCIES) 
	@rm -f arrive$(EXEEXT)
	$(CXXLINK) $(arrive_OBJECTS) $(arrive_LDADD) $(LIBS)
arrive2$(EXEEXT): $(arrive2_OBJECTS) $(arrive2_DEPENDENCIES) 
	@rm -f arrive2$(EXEEXT)
	$(CXXLINK) $(arrive2_OBJECTS) $(arrive2_LDADD) $(LIBS)
count-kmers$(EXEEXT): $(count_kmers_OBJECTS) $(count_kmers_DEPENDENCIES) 
	@rm -f count-kmers$(EXEEXT)
	$(CXXLINK) $(count_kmers_OBJECTS) $(count_kmers_LDADD) $(LIBS)
count-qmers$(EXEEXT): $(count_qmers_OBJECTS) $(count_qmers_DEPENDENCIES) 
	@rm -f count-qmers$(EXEEXT)
	$(CXXLINK) $(count_qmers_OBJECTS) $(count_qmers_LDADD) $(LIBS)
find-tandem$(EXEEXT): $(find_tandem_OBJECTS) $(find_tandem_DEPENDENCIES) 
	@rm -f find-tandem$(EXEEXT)
	$(CXXLINK) $(find_tandem_OBJECTS) $(find_tandem_LDADD) $(LIBS)
frg-umd-merge$(EXEEXT): $(frg_umd_merge_OBJECTS) $(frg_umd_merge_DEPENDENCIES) 
	@rm -f frg-umd-merge$(EXEEXT)
	$(CXXLINK) $(frg_umd_merge_OBJECTS) $(frg_umd_merge_LDADD) $(LIBS)
gap-links$(EXEEXT): $(gap_links_OBJECTS) $(gap_links_DEPENDENCIES) 
	@rm -f gap-links$(EXEEXT)
	$(CXXLINK) $(gap_links_OBJECTS) $(gap_links_LDADD) $(LIBS)
genome-complexity$(EXEEXT): $(genome_complexity_OBJECTS) $(genome_complexity_DEPENDENCIES) 
	@rm -f genome-complexity$(EXEEXT)
	$(CXXLINK) $(genome_complexity_OBJECTS) $(genome_complexity_LDADD) $(LIBS)
genome-complexity-fast$(EXEEXT): $(genome_complexity_fast_OBJECTS) $(genome_complexity_fast_DEPENDENCIES) 
	@rm -f genome-complexity-fast$(EXEEXT)
	$(CXXLINK) $(genome_complexity_fast_OBJECTS) $(genome_complexity_fast_LDADD) $(LIBS)
hash-overlap$(EXEEXT): $(hash_overlap_OBJECTS) $(hash_overlap_DEPENDENCIES) 
	@rm -f hash-overlap$(EXEEXT)
	$(CXXLINK) $(hash_overlap_OBJECTS) $(hash_overlap_LDADD) $(LIBS)
kmer-count$(EXEEXT): $(kmer_count_OBJECTS) $(kmer_count_DEPENDENCIES) 
	@rm -f kmer-count$(EXEEXT)
	$(CXXLINK) $(kmer_count_OBJECTS) $(kmer_count_LDADD) $(LIBS)
kmer-cov$(EXEEXT): $(kmer_cov_OBJECTS) $(kmer_cov_DEPENDENCIES) 
	@rm -f kmer-cov$(EXEEXT)
	$(CXXLINK) $(kmer_cov_OBJECTS) $(kmer_cov_LDADD) $(LIBS)
kmer-cov-plot$(EXEEXT): $(kmer_cov_plot_OBJECTS) $(kmer_cov_plot_DEPENDENCIES) 
	@rm -f kmer-cov-plot$(EXEEXT)
	$(CXXLINK) $(kmer_cov_plot_OBJECTS) $(kmer_cov_plot_LDADD) $(LIBS)
make-consensus$(EXEEXT): $(make_consensus_OBJECTS) $(make_consensus_DEPENDENCIES) 
	@rm -f make-consensus$(EXEEXT)
	$(CXXLINK) $(make_consensus_OBJECTS) $(make_consensus_LDADD) $(LIBS)
make-consensus_poly$(EXEEXT): $(make_consensus_poly_OBJECTS) $(make_consensus_poly_DEPENDENCIES) 
	@rm -f make-consensus_poly$(EXEEXT)
	$(CXXLINK) $(make_consensus_poly_OBJECTS) $(make_consensus_poly_LDADD) $(LIBS)
maligntest$(EXEEXT): $(maligntest_OBJECTS) $(maligntest_DEPENDENCIES) 
	@rm -f maligntest$(EXEEXT)
	$(CXXLINK) $(maligntest_OBJECTS) $(maligntest_LDADD) $(LIBS)
merge-contigs$(EXEEXT): $(merge_contigs_OBJECTS) $(merge_contigs_DEPENDENCIES) 
	@rm -f merge-contigs$(EXEEXT)
	$(CXXLINK) $(merge_contigs_OBJECTS) $(merge_contigs_LDADD) $(LIBS)
missing-reads$(EXEEXT): $(missing_reads_OBJECTS) $(missing_reads_DEPENDENCIES) 
	@rm -f missing-reads$(EXEEXT)
	$(CXXLINK) $(missing_reads_OBJECTS) $(missing_reads_LDADD) $(LIBS)
overlap-align$(EXEEXT): $(overlap_align_OBJECTS) $(overlap_align_DEPENDENCIES) 
	@rm -f overlap-align$(EXEEXT)
	$(CXXLINK) $(overlap_align_OBJECTS) $(overlap_align_LDADD) $(LIBS)
ovl-degr-dist$(EXEEXT): $(ovl_degr_dist_OBJECTS) $(ovl_degr_dist_DEPENDENCIES) 
	@rm -f ovl-degr-dist$(EXEEXT)
	$(CXXLINK) $(ovl_degr_dist_OBJECTS) $(ovl_degr_dist_LDADD) $(LIBS)
qmer-filter$(EXEEXT): $(qmer_filter_OBJECTS) $(qmer_filter_DEPENDENCIES) 
	@rm -f qmer-filter$(EXEEXT)
	$(CXXLINK) $(qmer_filter_OBJECTS) $(qmer_filter_LDADD) $(LIBS)
readinfo2cam$(EXEEXT): $(readinfo2cam_OBJECTS) $(readinfo2cam_DEPENDENCIES) 
	@rm -f readinfo2cam$(EXEEXT)
	$(CXXLINK) $(readinfo2cam_OBJECTS) $(readinfo2cam_LDADD) $(LIBS)
running-cmp$(EXEEXT): $(running_cmp_OBJECTS) $(running_cmp_DEPENDENCIES) 
	@rm -f running-cmp$(EXEEXT)
	$(CXXLINK) $(running_cmp_OBJECTS) $(running_cmp_LDADD) $(LIBS)
show-ma-asm$(EXEEXT): $(show_ma_asm_OBJECTS) $(show_ma_asm_DEPENDENCIES) 
	@rm -f show-ma-asm$(EXEEXT)
	$(CXXLINK) $(show_ma_asm_OBJECTS) $(show_ma_asm_LDADD) $(LIBS)
sim-cover-depth$(EXEEXT): $(sim_cover_depth_OBJECTS) $(sim_cover_depth_DEPENDENCIES) 
	@rm -f sim-cover-depth$(EXEEXT)
	$(CXXLINK) $(sim_cover_depth_OBJECTS) $(sim_cover_depth_LDADD) $(LIBS)
sim-cover2$(EXEEXT): $(sim_cover2_OBJECTS) $(sim_cover2_DEPENDENCIES) 
	@rm -f sim-cover2$(EXEEXT)
	$(CXXLINK) $(sim_cover2_OBJECTS) $(sim_cover2_LDADD) $(LIBS)
sim-shotgun$(EXEEXT): $(sim_shotgun_OBJECTS) $(sim_shotgun_DEPENDENCIES) 
	@rm -f sim-shotgun$(EXEEXT)
	$(CXXLINK) $(sim_shotgun_OBJECTS) $(sim_shotgun_LDADD) $(LIBS)
simple-overlap$(EXEEXT): $(simple_overlap_OBJECTS) $(simple_overlap_DEPENDENCIES) 
	@rm -f simple-overlap$(EXEEXT)
	$(CXXLINK) $(simple_overlap_OBJECTS) $(simple_overlap_LDADD) $(LIBS)
test-align$(EXEEXT): $(test_align_OBJECTS) $(test_align_DEPENDENCIES) 
	@rm -f test-align$(EXEEXT)
	$(CXXLINK) $(test_align_OBJECTS) $(test_align_LDADD) $(LIBS)
verify-layout$(EXEEXT): $(verify_layout_OBJECTS) $(verify_layout_DEPENDENCIES) 
	@rm -f verify-layout$(EXEEXT)
	$(CXXLINK) $(verify_layout_OBJECTS) $(verify_layout_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/align.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/align_poly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arrive.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arrive2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/count-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/count-qmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/find-tandem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frg-umd-merge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gap-links.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/genome-complexity-fast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash-overlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmer-count.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmer-cov-plot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmer-cov.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make-consensus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make-consensus_poly.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maligntest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/merge-contigs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missing-reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/overlap-align.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ovl-degr-dist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmer-filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/readinfo2cam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/running-cmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/show-ma-asm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim-cover-depth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim-cover2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim-shotgun.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simple-overlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-align.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify-layout.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-amosincludeHEADERS: $(amosinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(amosincludedir)" || $(MKDIR_P) "$(DESTDIR)$(amosincludedir)"
	@list='$(amosinclude_HEADERS)'; test -n "$(amosincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(amosincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(amosincludedir)" || exit $$?; \
	done

uninstall-amosincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(amosinclude_HEADERS)'; test -n "$(amosincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(amosincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(amosincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(amoslibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(amosincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-amoslibLIBRARIES clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-amosincludeHEADERS install-amoslibLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-amosincludeHEADERS uninstall-amoslibLIBRARIES \
	uninstall-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: check-am install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-amoslibLIBRARIES clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am \
	install-amosincludeHEADERS install-amoslibLIBRARIES \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am \
	uninstall-amosincludeHEADERS uninstall-amoslibLIBRARIES \
	uninstall-binPROGRAMS uninstall-hook


install-exec-hook: install-bin-scripts-hook

uninstall-hook: uninstall-bin-scripts-hook

install-bin-scripts-hook: $(dist_bin_SCRIPTS) $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          if test -f "$(DESTDIR)$(bindir)/$$f"  &&  test "$$f" != "$$b"; then \
            $(INSTALL_SCRIPT) "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
            || exit 1; \
            case "$$p" in \
              *.pl) \
                echo " configuring perl '$$b'"; \
                echo '#!$(PERL)' > "$(DESTDIR)$(bindir)/$$b"; \
                echo 'use lib "$(libdir)";' >> "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *.py) \
                echo " configuring python '$$b'"; \
                echo '#!$(PYTHON)' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    -e 's|^AMOSDIR[     ]*=.*$$|AMOSDIR=\"$(bindir)/\"|' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *.acf) \
                echo " configuring acf '$$b'"; \
                echo '#!$(bindir)/runAmos -C' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e 's|^BINDIR[ 	]*=.*$$|BINDIR=$(bindir)|' \
                    -e 's|^NUCMER[ 	]*=.*$$|NUCMER=$(NUCMER)|' \
                    -e 's|^DELTAFILTER[        ]*=.*$$|DELTAFILTER=$(DELTAFILTER)|' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *) \
                echo " configuring '$$b'"; \
                cp "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
                ;; \
            esac; \
            rm -f "$(DESTDIR)$(bindir)/$$f"; \
          else :; fi; \
        done

uninstall-bin-scripts-hook:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          echo " rm -f '$(DESTDIR)$(bindir)/$$b'"; \
          rm -f "$(DESTDIR)$(bindir)/$$b"; \
        done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
