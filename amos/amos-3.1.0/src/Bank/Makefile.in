# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_bin_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/config/amos.mk
bin_PROGRAMS = bank2contig$(EXEEXT) bank2lib$(EXEEXT) \
	bank2coverage$(EXEEXT) bank2fasta$(EXEEXT) bank2scaff$(EXEEXT) \
	bank-clean$(EXEEXT) bank-combine$(EXEEXT) \
	bank-mapping$(EXEEXT) bank-report$(EXEEXT) \
	bank-transact$(EXEEXT) bank-tutorial$(EXEEXT) \
	dumpFeatures$(EXEEXT) dumpmates$(EXEEXT) dumpreads$(EXEEXT) \
	extractContig$(EXEEXT) findMissingMates$(EXEEXT) \
	grow-readbank$(EXEEXT) listReadPlacedStatus$(EXEEXT) \
	listGCContent$(EXEEXT) load-overlaps$(EXEEXT) \
	loadFeatures$(EXEEXT) normalizeScaffold$(EXEEXT) \
	renameReads$(EXEEXT) resetFragLibrary$(EXEEXT) \
	revScaffold$(EXEEXT) select-reads$(EXEEXT) \
	simplifyLibraries$(EXEEXT) simpleContigLoader$(EXEEXT) \
	updateBankPositions$(EXEEXT) updateClrRanges$(EXEEXT) \
	updateLibSizes$(EXEEXT) dumpContigsAsReads$(EXEEXT) \
	partitionBank$(EXEEXT)
subdir = src/Bank
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/amos.m4 \
	$(top_srcdir)/config/getopt.m4 \
	$(top_srcdir)/config/onceonly_2_57.m4 \
	$(top_srcdir)/config/perlmodules.m4 \
	$(top_srcdir)/config/strtod.m4 $(top_srcdir)/config/strtol.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_bank_clean_OBJECTS = bank-clean.$(OBJEXT)
bank_clean_OBJECTS = $(am_bank_clean_OBJECTS)
bank_clean_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank_combine_OBJECTS = bank-combine.$(OBJEXT)
bank_combine_OBJECTS = $(am_bank_combine_OBJECTS)
bank_combine_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank_mapping_OBJECTS = bank-mapping.$(OBJEXT)
bank_mapping_OBJECTS = $(am_bank_mapping_OBJECTS)
bank_mapping_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank_report_OBJECTS = bank-report.$(OBJEXT)
bank_report_OBJECTS = $(am_bank_report_OBJECTS)
bank_report_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank_transact_OBJECTS = bank-transact.$(OBJEXT)
bank_transact_OBJECTS = $(am_bank_transact_OBJECTS)
bank_transact_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank_tutorial_OBJECTS = bank-tutorial.$(OBJEXT)
bank_tutorial_OBJECTS = $(am_bank_tutorial_OBJECTS)
bank_tutorial_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_bank2contig_OBJECTS = bank2contig.$(OBJEXT)
bank2contig_OBJECTS = $(am_bank2contig_OBJECTS)
bank2contig_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a
am_bank2coverage_OBJECTS = bank2coverage.$(OBJEXT)
bank2coverage_OBJECTS = $(am_bank2coverage_OBJECTS)
bank2coverage_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Slice/libSlice.a
am_bank2fasta_OBJECTS = bank2fasta-bank2fasta.$(OBJEXT)
bank2fasta_OBJECTS = $(am_bank2fasta_OBJECTS)
bank2fasta_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_bank2lib_OBJECTS = bank2lib.$(OBJEXT)
bank2lib_OBJECTS = $(am_bank2lib_OBJECTS)
bank2lib_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a
am_bank2scaff_OBJECTS = bank2scaff.$(OBJEXT)
bank2scaff_OBJECTS = $(am_bank2scaff_OBJECTS)
bank2scaff_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_dumpContigsAsReads_OBJECTS =  \
	dumpContigsAsReads-dumpContigsAsReads.$(OBJEXT)
dumpContigsAsReads_OBJECTS = $(am_dumpContigsAsReads_OBJECTS)
dumpContigsAsReads_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_dumpFeatures_OBJECTS = dumpFeatures.$(OBJEXT)
dumpFeatures_OBJECTS = $(am_dumpFeatures_OBJECTS)
dumpFeatures_DEPENDENCIES =  \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_dumpmates_OBJECTS = dumpmates.$(OBJEXT)
dumpmates_OBJECTS = $(am_dumpmates_OBJECTS)
dumpmates_DEPENDENCIES = $(top_builddir)/src/AMOS/libAMOS.a
am_dumpreads_OBJECTS = dumpreads.$(OBJEXT)
dumpreads_OBJECTS = $(am_dumpreads_OBJECTS)
dumpreads_DEPENDENCIES = $(top_builddir)/src/AMOS/libAMOS.a
am_extractContig_OBJECTS = extractContig.$(OBJEXT)
extractContig_OBJECTS = $(am_extractContig_OBJECTS)
extractContig_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_findMissingMates_OBJECTS = findMissingMates.$(OBJEXT)
findMissingMates_OBJECTS = $(am_findMissingMates_OBJECTS)
findMissingMates_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_grow_readbank_OBJECTS = grow-readbank.$(OBJEXT)
grow_readbank_OBJECTS = $(am_grow_readbank_OBJECTS)
grow_readbank_DEPENDENCIES = $(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_listGCContent_OBJECTS = listGCContent.$(OBJEXT)
listGCContent_OBJECTS = $(am_listGCContent_OBJECTS)
listGCContent_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_listReadPlacedStatus_OBJECTS = listReadPlacedStatus.$(OBJEXT)
listReadPlacedStatus_OBJECTS = $(am_listReadPlacedStatus_OBJECTS)
listReadPlacedStatus_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_load_overlaps_OBJECTS = load-overlaps.$(OBJEXT)
load_overlaps_OBJECTS = $(am_load_overlaps_OBJECTS)
load_overlaps_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_loadFeatures_OBJECTS = loadFeatures.$(OBJEXT)
loadFeatures_OBJECTS = $(am_loadFeatures_OBJECTS)
loadFeatures_DEPENDENCIES =  \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_normalizeScaffold_OBJECTS = normalizeScaffold.$(OBJEXT)
normalizeScaffold_OBJECTS = $(am_normalizeScaffold_OBJECTS)
normalizeScaffold_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_partitionBank_OBJECTS = partitionBank-partitionBank.$(OBJEXT)
partitionBank_OBJECTS = $(am_partitionBank_OBJECTS)
partitionBank_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_renameReads_OBJECTS = renameReads.$(OBJEXT)
renameReads_OBJECTS = $(am_renameReads_OBJECTS)
renameReads_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_resetFragLibrary_OBJECTS = resetFragLibrary.$(OBJEXT)
resetFragLibrary_OBJECTS = $(am_resetFragLibrary_OBJECTS)
resetFragLibrary_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_revScaffold_OBJECTS = revScaffold.$(OBJEXT)
revScaffold_OBJECTS = $(am_revScaffold_OBJECTS)
revScaffold_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_select_reads_OBJECTS = select-reads.$(OBJEXT)
select_reads_OBJECTS = $(am_select_reads_OBJECTS)
select_reads_DEPENDENCIES = $(top_builddir)/src/AMOS/libAMOS.a
am_simpleContigLoader_OBJECTS = simpleContigLoader.$(OBJEXT)
simpleContigLoader_OBJECTS = $(am_simpleContigLoader_OBJECTS)
simpleContigLoader_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_simplifyLibraries_OBJECTS =  \
	simplifyLibraries-simplifyLibraries.$(OBJEXT)
simplifyLibraries_OBJECTS = $(am_simplifyLibraries_OBJECTS)
simplifyLibraries_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a
am_updateBankPositions_OBJECTS = updateBankPositions.$(OBJEXT)
updateBankPositions_OBJECTS = $(am_updateBankPositions_OBJECTS)
updateBankPositions_DEPENDENCIES =  \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_updateClrRanges_OBJECTS = updateClrRanges.$(OBJEXT)
updateClrRanges_OBJECTS = $(am_updateClrRanges_OBJECTS)
updateClrRanges_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am_updateLibSizes_OBJECTS = updateLibSizes.$(OBJEXT)
updateLibSizes_OBJECTS = $(am_updateLibSizes_OBJECTS)
updateLibSizes_DEPENDENCIES = $(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(bank_clean_SOURCES) $(bank_combine_SOURCES) \
	$(bank_mapping_SOURCES) $(bank_report_SOURCES) \
	$(bank_transact_SOURCES) $(bank_tutorial_SOURCES) \
	$(bank2contig_SOURCES) $(bank2coverage_SOURCES) \
	$(bank2fasta_SOURCES) $(bank2lib_SOURCES) \
	$(bank2scaff_SOURCES) $(dumpContigsAsReads_SOURCES) \
	$(dumpFeatures_SOURCES) $(dumpmates_SOURCES) \
	$(dumpreads_SOURCES) $(extractContig_SOURCES) \
	$(findMissingMates_SOURCES) $(grow_readbank_SOURCES) \
	$(listGCContent_SOURCES) $(listReadPlacedStatus_SOURCES) \
	$(load_overlaps_SOURCES) $(loadFeatures_SOURCES) \
	$(normalizeScaffold_SOURCES) $(partitionBank_SOURCES) \
	$(renameReads_SOURCES) $(resetFragLibrary_SOURCES) \
	$(revScaffold_SOURCES) $(select_reads_SOURCES) \
	$(simpleContigLoader_SOURCES) $(simplifyLibraries_SOURCES) \
	$(updateBankPositions_SOURCES) $(updateClrRanges_SOURCES) \
	$(updateLibSizes_SOURCES)
DIST_SOURCES = $(bank_clean_SOURCES) $(bank_combine_SOURCES) \
	$(bank_mapping_SOURCES) $(bank_report_SOURCES) \
	$(bank_transact_SOURCES) $(bank_tutorial_SOURCES) \
	$(bank2contig_SOURCES) $(bank2coverage_SOURCES) \
	$(bank2fasta_SOURCES) $(bank2lib_SOURCES) \
	$(bank2scaff_SOURCES) $(dumpContigsAsReads_SOURCES) \
	$(dumpFeatures_SOURCES) $(dumpmates_SOURCES) \
	$(dumpreads_SOURCES) $(extractContig_SOURCES) \
	$(findMissingMates_SOURCES) $(grow_readbank_SOURCES) \
	$(listGCContent_SOURCES) $(listReadPlacedStatus_SOURCES) \
	$(load_overlaps_SOURCES) $(loadFeatures_SOURCES) \
	$(normalizeScaffold_SOURCES) $(partitionBank_SOURCES) \
	$(renameReads_SOURCES) $(resetFragLibrary_SOURCES) \
	$(revScaffold_SOURCES) $(select_reads_SOURCES) \
	$(simpleContigLoader_SOURCES) $(simplifyLibraries_SOURCES) \
	$(updateBankPositions_SOURCES) $(updateClrRanges_SOURCES) \
	$(updateLibSizes_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAT = @BLAT@
BOOST_CXXFLAGS = @BOOST_CXXFLAGS@
BOOST_DIR = @BOOST_DIR@
CA_CXXFLAGS = @CA_CXXFLAGS@
CA_DIR = @CA_DIR@
CA_LDADD = @CA_LDADD@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DELTAFILTER = @DELTAFILTER@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETOPT_H = @GETOPT_H@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NUCMER = @NUCMER@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
POW_LIB = @POW_LIB@
PYTHON = @PYTHON@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_LIBS = @QT_LIBS@
QT_MOC = @QT_MOC@
QT_QMAKE = @QT_QMAKE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHOWCOORDS = @SHOWCOORDS@
STRIP = @STRIP@
VERSION = @VERSION@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
amosincludedir = @amosincludedir@
amoslibdir = @amoslibdir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
tigrincludedir = @tigrincludedir@
tigrlibdir = @tigrlibdir@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
dist_bin_SCRIPTS = \
	bank-unlock.pl

AM_CPPFLAGS = \
	-I$(top_srcdir)/src/CelMsg \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/Slice \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU \
	-I$(top_srcdir)/src/Foundation

bank_combine_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_combine_SOURCES = \
	bank-combine.cc

bank_mapping_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_mapping_SOURCES = \
	bank-mapping.cc

bank2contig_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
    $(top_builddir)/src/Foundation/libAMOSFoundation.a

bank2contig_SOURCES = \
	bank2contig.cc

bank2lib_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a

bank2lib_SOURCES = \
	bank2lib.cc

bank2coverage_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/Slice/libSlice.a

bank2coverage_SOURCES = \
	bank2coverage.cc

bank2scaff_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank2scaff_SOURCES = \
	bank2scaff.cc

bank_clean_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_clean_SOURCES = \
	bank-clean.cc

bank_report_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_report_SOURCES = \
	bank-report.cc

bank_transact_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_transact_SOURCES = \
	bank-transact.cc

normalizeScaffold_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

normalizeScaffold_SOURCES = \
	normalizeScaffold.cc

revScaffold_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

revScaffold_SOURCES = \
	revScaffold.cc

updateBankPositions_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

updateBankPositions_SOURCES = \
	updateBankPositions.cc

simpleContigLoader_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

simpleContigLoader_SOURCES = \
	simpleContigLoader.cc

updateClrRanges_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

updateClrRanges_SOURCES = \
	updateClrRanges.cc

updateLibSizes_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

updateLibSizes_SOURCES = \
	updateLibSizes.cc

resetFragLibrary_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

resetFragLibrary_SOURCES = \
	resetFragLibrary.cc

extractContig_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

extractContig_SOURCES = \
	extractContig.cc

findMissingMates_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

findMissingMates_SOURCES = \
	findMissingMates.cc

listGCContent_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

listGCContent_SOURCES = \
	listGCContent.cc

listReadPlacedStatus_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

listReadPlacedStatus_SOURCES = \
	listReadPlacedStatus.cc

dumpmates_LDADD = \
	$(top_builddir)/src/AMOS/libAMOS.a

dumpmates_SOURCES = \
	dumpmates.cc

dumpFeatures_LDADD = \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

dumpFeatures_SOURCES = \
	dumpFeatures.cc

loadFeatures_LDADD = \
	$(top_builddir)/src/Foundation/libAMOSFoundation.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

loadFeatures_SOURCES = \
	loadFeatures.cc

bank_tutorial_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

bank_tutorial_SOURCES = \
	bank-tutorial.cc

select_reads_LDADD = \
	$(top_builddir)/src/AMOS/libAMOS.a

select_reads_SOURCES = \
	select-reads.cc

dumpreads_LDADD = \
	$(top_builddir)/src/AMOS/libAMOS.a

dumpreads_SOURCES = \
	dumpreads.cc

renameReads_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

renameReads_SOURCES = \
	renameReads.cc

grow_readbank_LDADD = \
	$(top_builddir)/src/CelMsg/libCelMsg.a \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

grow_readbank_SOURCES = \
	grow-readbank.cc

load_overlaps_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a

load_overlaps_SOURCES = \
	load-overlaps.cc

bank2fasta_CPPFLAGS = \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU

bank2fasta_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

bank2fasta_SOURCES = \
	bank2fasta.cc

dumpContigsAsReads_CPPFLAGS = \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU

dumpContigsAsReads_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

dumpContigsAsReads_SOURCES = \
	dumpContigsAsReads.cc

partitionBank_CPPFLAGS = \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU

partitionBank_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

partitionBank_SOURCES = \
	partitionBank.cc

simplifyLibraries_CPPFLAGS = \
	-I$(top_srcdir)/src/Common \
	-I$(top_srcdir)/src/AMOS \
	-I$(top_builddir)/src/GNU

simplifyLibraries_LDADD = \
	$(top_builddir)/src/Common/libCommon.a \
	$(top_builddir)/src/AMOS/libAMOS.a \
	$(top_builddir)/src/GNU/libGNU.a

simplifyLibraries_SOURCES = \
	simplifyLibraries.cc

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/amos.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Bank/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Bank/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
bank-clean$(EXEEXT): $(bank_clean_OBJECTS) $(bank_clean_DEPENDENCIES) 
	@rm -f bank-clean$(EXEEXT)
	$(CXXLINK) $(bank_clean_OBJECTS) $(bank_clean_LDADD) $(LIBS)
bank-combine$(EXEEXT): $(bank_combine_OBJECTS) $(bank_combine_DEPENDENCIES) 
	@rm -f bank-combine$(EXEEXT)
	$(CXXLINK) $(bank_combine_OBJECTS) $(bank_combine_LDADD) $(LIBS)
bank-mapping$(EXEEXT): $(bank_mapping_OBJECTS) $(bank_mapping_DEPENDENCIES) 
	@rm -f bank-mapping$(EXEEXT)
	$(CXXLINK) $(bank_mapping_OBJECTS) $(bank_mapping_LDADD) $(LIBS)
bank-report$(EXEEXT): $(bank_report_OBJECTS) $(bank_report_DEPENDENCIES) 
	@rm -f bank-report$(EXEEXT)
	$(CXXLINK) $(bank_report_OBJECTS) $(bank_report_LDADD) $(LIBS)
bank-transact$(EXEEXT): $(bank_transact_OBJECTS) $(bank_transact_DEPENDENCIES) 
	@rm -f bank-transact$(EXEEXT)
	$(CXXLINK) $(bank_transact_OBJECTS) $(bank_transact_LDADD) $(LIBS)
bank-tutorial$(EXEEXT): $(bank_tutorial_OBJECTS) $(bank_tutorial_DEPENDENCIES) 
	@rm -f bank-tutorial$(EXEEXT)
	$(CXXLINK) $(bank_tutorial_OBJECTS) $(bank_tutorial_LDADD) $(LIBS)
bank2contig$(EXEEXT): $(bank2contig_OBJECTS) $(bank2contig_DEPENDENCIES) 
	@rm -f bank2contig$(EXEEXT)
	$(CXXLINK) $(bank2contig_OBJECTS) $(bank2contig_LDADD) $(LIBS)
bank2coverage$(EXEEXT): $(bank2coverage_OBJECTS) $(bank2coverage_DEPENDENCIES) 
	@rm -f bank2coverage$(EXEEXT)
	$(CXXLINK) $(bank2coverage_OBJECTS) $(bank2coverage_LDADD) $(LIBS)
bank2fasta$(EXEEXT): $(bank2fasta_OBJECTS) $(bank2fasta_DEPENDENCIES) 
	@rm -f bank2fasta$(EXEEXT)
	$(CXXLINK) $(bank2fasta_OBJECTS) $(bank2fasta_LDADD) $(LIBS)
bank2lib$(EXEEXT): $(bank2lib_OBJECTS) $(bank2lib_DEPENDENCIES) 
	@rm -f bank2lib$(EXEEXT)
	$(CXXLINK) $(bank2lib_OBJECTS) $(bank2lib_LDADD) $(LIBS)
bank2scaff$(EXEEXT): $(bank2scaff_OBJECTS) $(bank2scaff_DEPENDENCIES) 
	@rm -f bank2scaff$(EXEEXT)
	$(CXXLINK) $(bank2scaff_OBJECTS) $(bank2scaff_LDADD) $(LIBS)
dumpContigsAsReads$(EXEEXT): $(dumpContigsAsReads_OBJECTS) $(dumpContigsAsReads_DEPENDENCIES) 
	@rm -f dumpContigsAsReads$(EXEEXT)
	$(CXXLINK) $(dumpContigsAsReads_OBJECTS) $(dumpContigsAsReads_LDADD) $(LIBS)
dumpFeatures$(EXEEXT): $(dumpFeatures_OBJECTS) $(dumpFeatures_DEPENDENCIES) 
	@rm -f dumpFeatures$(EXEEXT)
	$(CXXLINK) $(dumpFeatures_OBJECTS) $(dumpFeatures_LDADD) $(LIBS)
dumpmates$(EXEEXT): $(dumpmates_OBJECTS) $(dumpmates_DEPENDENCIES) 
	@rm -f dumpmates$(EXEEXT)
	$(CXXLINK) $(dumpmates_OBJECTS) $(dumpmates_LDADD) $(LIBS)
dumpreads$(EXEEXT): $(dumpreads_OBJECTS) $(dumpreads_DEPENDENCIES) 
	@rm -f dumpreads$(EXEEXT)
	$(CXXLINK) $(dumpreads_OBJECTS) $(dumpreads_LDADD) $(LIBS)
extractContig$(EXEEXT): $(extractContig_OBJECTS) $(extractContig_DEPENDENCIES) 
	@rm -f extractContig$(EXEEXT)
	$(CXXLINK) $(extractContig_OBJECTS) $(extractContig_LDADD) $(LIBS)
findMissingMates$(EXEEXT): $(findMissingMates_OBJECTS) $(findMissingMates_DEPENDENCIES) 
	@rm -f findMissingMates$(EXEEXT)
	$(CXXLINK) $(findMissingMates_OBJECTS) $(findMissingMates_LDADD) $(LIBS)
grow-readbank$(EXEEXT): $(grow_readbank_OBJECTS) $(grow_readbank_DEPENDENCIES) 
	@rm -f grow-readbank$(EXEEXT)
	$(CXXLINK) $(grow_readbank_OBJECTS) $(grow_readbank_LDADD) $(LIBS)
listGCContent$(EXEEXT): $(listGCContent_OBJECTS) $(listGCContent_DEPENDENCIES) 
	@rm -f listGCContent$(EXEEXT)
	$(CXXLINK) $(listGCContent_OBJECTS) $(listGCContent_LDADD) $(LIBS)
listReadPlacedStatus$(EXEEXT): $(listReadPlacedStatus_OBJECTS) $(listReadPlacedStatus_DEPENDENCIES) 
	@rm -f listReadPlacedStatus$(EXEEXT)
	$(CXXLINK) $(listReadPlacedStatus_OBJECTS) $(listReadPlacedStatus_LDADD) $(LIBS)
load-overlaps$(EXEEXT): $(load_overlaps_OBJECTS) $(load_overlaps_DEPENDENCIES) 
	@rm -f load-overlaps$(EXEEXT)
	$(CXXLINK) $(load_overlaps_OBJECTS) $(load_overlaps_LDADD) $(LIBS)
loadFeatures$(EXEEXT): $(loadFeatures_OBJECTS) $(loadFeatures_DEPENDENCIES) 
	@rm -f loadFeatures$(EXEEXT)
	$(CXXLINK) $(loadFeatures_OBJECTS) $(loadFeatures_LDADD) $(LIBS)
normalizeScaffold$(EXEEXT): $(normalizeScaffold_OBJECTS) $(normalizeScaffold_DEPENDENCIES) 
	@rm -f normalizeScaffold$(EXEEXT)
	$(CXXLINK) $(normalizeScaffold_OBJECTS) $(normalizeScaffold_LDADD) $(LIBS)
partitionBank$(EXEEXT): $(partitionBank_OBJECTS) $(partitionBank_DEPENDENCIES) 
	@rm -f partitionBank$(EXEEXT)
	$(CXXLINK) $(partitionBank_OBJECTS) $(partitionBank_LDADD) $(LIBS)
renameReads$(EXEEXT): $(renameReads_OBJECTS) $(renameReads_DEPENDENCIES) 
	@rm -f renameReads$(EXEEXT)
	$(CXXLINK) $(renameReads_OBJECTS) $(renameReads_LDADD) $(LIBS)
resetFragLibrary$(EXEEXT): $(resetFragLibrary_OBJECTS) $(resetFragLibrary_DEPENDENCIES) 
	@rm -f resetFragLibrary$(EXEEXT)
	$(CXXLINK) $(resetFragLibrary_OBJECTS) $(resetFragLibrary_LDADD) $(LIBS)
revScaffold$(EXEEXT): $(revScaffold_OBJECTS) $(revScaffold_DEPENDENCIES) 
	@rm -f revScaffold$(EXEEXT)
	$(CXXLINK) $(revScaffold_OBJECTS) $(revScaffold_LDADD) $(LIBS)
select-reads$(EXEEXT): $(select_reads_OBJECTS) $(select_reads_DEPENDENCIES) 
	@rm -f select-reads$(EXEEXT)
	$(CXXLINK) $(select_reads_OBJECTS) $(select_reads_LDADD) $(LIBS)
simpleContigLoader$(EXEEXT): $(simpleContigLoader_OBJECTS) $(simpleContigLoader_DEPENDENCIES) 
	@rm -f simpleContigLoader$(EXEEXT)
	$(CXXLINK) $(simpleContigLoader_OBJECTS) $(simpleContigLoader_LDADD) $(LIBS)
simplifyLibraries$(EXEEXT): $(simplifyLibraries_OBJECTS) $(simplifyLibraries_DEPENDENCIES) 
	@rm -f simplifyLibraries$(EXEEXT)
	$(CXXLINK) $(simplifyLibraries_OBJECTS) $(simplifyLibraries_LDADD) $(LIBS)
updateBankPositions$(EXEEXT): $(updateBankPositions_OBJECTS) $(updateBankPositions_DEPENDENCIES) 
	@rm -f updateBankPositions$(EXEEXT)
	$(CXXLINK) $(updateBankPositions_OBJECTS) $(updateBankPositions_LDADD) $(LIBS)
updateClrRanges$(EXEEXT): $(updateClrRanges_OBJECTS) $(updateClrRanges_DEPENDENCIES) 
	@rm -f updateClrRanges$(EXEEXT)
	$(CXXLINK) $(updateClrRanges_OBJECTS) $(updateClrRanges_LDADD) $(LIBS)
updateLibSizes$(EXEEXT): $(updateLibSizes_OBJECTS) $(updateLibSizes_DEPENDENCIES) 
	@rm -f updateLibSizes$(EXEEXT)
	$(CXXLINK) $(updateLibSizes_OBJECTS) $(updateLibSizes_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-clean.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-combine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-mapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-report.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-transact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank-tutorial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank2contig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank2coverage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank2fasta-bank2fasta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank2lib.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bank2scaff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpFeatures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpmates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpreads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extractContig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findMissingMates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grow-readbank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listGCContent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listReadPlacedStatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load-overlaps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadFeatures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/normalizeScaffold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partitionBank-partitionBank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/renameReads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resetFragLibrary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/revScaffold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/select-reads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simpleContigLoader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplifyLibraries-simplifyLibraries.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/updateBankPositions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/updateClrRanges.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/updateLibSizes.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

bank2fasta-bank2fasta.o: bank2fasta.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bank2fasta_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bank2fasta-bank2fasta.o -MD -MP -MF $(DEPDIR)/bank2fasta-bank2fasta.Tpo -c -o bank2fasta-bank2fasta.o `test -f 'bank2fasta.cc' || echo '$(srcdir)/'`bank2fasta.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bank2fasta-bank2fasta.Tpo $(DEPDIR)/bank2fasta-bank2fasta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bank2fasta.cc' object='bank2fasta-bank2fasta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bank2fasta_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bank2fasta-bank2fasta.o `test -f 'bank2fasta.cc' || echo '$(srcdir)/'`bank2fasta.cc

bank2fasta-bank2fasta.obj: bank2fasta.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bank2fasta_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bank2fasta-bank2fasta.obj -MD -MP -MF $(DEPDIR)/bank2fasta-bank2fasta.Tpo -c -o bank2fasta-bank2fasta.obj `if test -f 'bank2fasta.cc'; then $(CYGPATH_W) 'bank2fasta.cc'; else $(CYGPATH_W) '$(srcdir)/bank2fasta.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/bank2fasta-bank2fasta.Tpo $(DEPDIR)/bank2fasta-bank2fasta.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bank2fasta.cc' object='bank2fasta-bank2fasta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bank2fasta_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bank2fasta-bank2fasta.obj `if test -f 'bank2fasta.cc'; then $(CYGPATH_W) 'bank2fasta.cc'; else $(CYGPATH_W) '$(srcdir)/bank2fasta.cc'; fi`

dumpContigsAsReads-dumpContigsAsReads.o: dumpContigsAsReads.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpContigsAsReads_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dumpContigsAsReads-dumpContigsAsReads.o -MD -MP -MF $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Tpo -c -o dumpContigsAsReads-dumpContigsAsReads.o `test -f 'dumpContigsAsReads.cc' || echo '$(srcdir)/'`dumpContigsAsReads.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Tpo $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dumpContigsAsReads.cc' object='dumpContigsAsReads-dumpContigsAsReads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpContigsAsReads_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dumpContigsAsReads-dumpContigsAsReads.o `test -f 'dumpContigsAsReads.cc' || echo '$(srcdir)/'`dumpContigsAsReads.cc

dumpContigsAsReads-dumpContigsAsReads.obj: dumpContigsAsReads.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpContigsAsReads_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dumpContigsAsReads-dumpContigsAsReads.obj -MD -MP -MF $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Tpo -c -o dumpContigsAsReads-dumpContigsAsReads.obj `if test -f 'dumpContigsAsReads.cc'; then $(CYGPATH_W) 'dumpContigsAsReads.cc'; else $(CYGPATH_W) '$(srcdir)/dumpContigsAsReads.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Tpo $(DEPDIR)/dumpContigsAsReads-dumpContigsAsReads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dumpContigsAsReads.cc' object='dumpContigsAsReads-dumpContigsAsReads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dumpContigsAsReads_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dumpContigsAsReads-dumpContigsAsReads.obj `if test -f 'dumpContigsAsReads.cc'; then $(CYGPATH_W) 'dumpContigsAsReads.cc'; else $(CYGPATH_W) '$(srcdir)/dumpContigsAsReads.cc'; fi`

partitionBank-partitionBank.o: partitionBank.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partitionBank_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partitionBank-partitionBank.o -MD -MP -MF $(DEPDIR)/partitionBank-partitionBank.Tpo -c -o partitionBank-partitionBank.o `test -f 'partitionBank.cc' || echo '$(srcdir)/'`partitionBank.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/partitionBank-partitionBank.Tpo $(DEPDIR)/partitionBank-partitionBank.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='partitionBank.cc' object='partitionBank-partitionBank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partitionBank_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partitionBank-partitionBank.o `test -f 'partitionBank.cc' || echo '$(srcdir)/'`partitionBank.cc

partitionBank-partitionBank.obj: partitionBank.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partitionBank_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partitionBank-partitionBank.obj -MD -MP -MF $(DEPDIR)/partitionBank-partitionBank.Tpo -c -o partitionBank-partitionBank.obj `if test -f 'partitionBank.cc'; then $(CYGPATH_W) 'partitionBank.cc'; else $(CYGPATH_W) '$(srcdir)/partitionBank.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/partitionBank-partitionBank.Tpo $(DEPDIR)/partitionBank-partitionBank.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='partitionBank.cc' object='partitionBank-partitionBank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(partitionBank_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partitionBank-partitionBank.obj `if test -f 'partitionBank.cc'; then $(CYGPATH_W) 'partitionBank.cc'; else $(CYGPATH_W) '$(srcdir)/partitionBank.cc'; fi`

simplifyLibraries-simplifyLibraries.o: simplifyLibraries.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simplifyLibraries_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simplifyLibraries-simplifyLibraries.o -MD -MP -MF $(DEPDIR)/simplifyLibraries-simplifyLibraries.Tpo -c -o simplifyLibraries-simplifyLibraries.o `test -f 'simplifyLibraries.cc' || echo '$(srcdir)/'`simplifyLibraries.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simplifyLibraries-simplifyLibraries.Tpo $(DEPDIR)/simplifyLibraries-simplifyLibraries.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='simplifyLibraries.cc' object='simplifyLibraries-simplifyLibraries.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simplifyLibraries_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simplifyLibraries-simplifyLibraries.o `test -f 'simplifyLibraries.cc' || echo '$(srcdir)/'`simplifyLibraries.cc

simplifyLibraries-simplifyLibraries.obj: simplifyLibraries.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simplifyLibraries_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simplifyLibraries-simplifyLibraries.obj -MD -MP -MF $(DEPDIR)/simplifyLibraries-simplifyLibraries.Tpo -c -o simplifyLibraries-simplifyLibraries.obj `if test -f 'simplifyLibraries.cc'; then $(CYGPATH_W) 'simplifyLibraries.cc'; else $(CYGPATH_W) '$(srcdir)/simplifyLibraries.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/simplifyLibraries-simplifyLibraries.Tpo $(DEPDIR)/simplifyLibraries-simplifyLibraries.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='simplifyLibraries.cc' object='simplifyLibraries-simplifyLibraries.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(simplifyLibraries_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simplifyLibraries-simplifyLibraries.obj `if test -f 'simplifyLibraries.cc'; then $(CYGPATH_W) 'simplifyLibraries.cc'; else $(CYGPATH_W) '$(srcdir)/simplifyLibraries.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-hook install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-hook


install-exec-hook: install-bin-scripts-hook

uninstall-hook: uninstall-bin-scripts-hook

install-bin-scripts-hook: $(dist_bin_SCRIPTS) $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          if test -f "$(DESTDIR)$(bindir)/$$f"  &&  test "$$f" != "$$b"; then \
            $(INSTALL_SCRIPT) "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
            || exit 1; \
            case "$$p" in \
              *.pl) \
                echo " configuring perl '$$b'"; \
                echo '#!$(PERL)' > "$(DESTDIR)$(bindir)/$$b"; \
                echo 'use lib "$(libdir)";' >> "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *.py) \
                echo " configuring python '$$b'"; \
                echo '#!$(PYTHON)' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e '1 {s|^#!.*$$||;}' \
                    -e 's|^AMOSDIR[     ]*=.*$$|AMOSDIR=\"$(bindir)/\"|' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *.acf) \
                echo " configuring acf '$$b'"; \
                echo '#!$(bindir)/runAmos -C' > "$(DESTDIR)$(bindir)/$$b"; \
                sed -e 's|^BINDIR[ 	]*=.*$$|BINDIR=$(bindir)|' \
                    -e 's|^NUCMER[ 	]*=.*$$|NUCMER=$(NUCMER)|' \
                    -e 's|^DELTAFILTER[        ]*=.*$$|DELTAFILTER=$(DELTAFILTER)|' \
                    "$(DESTDIR)$(bindir)/$$f" >> "$(DESTDIR)$(bindir)/$$b" \
                || exit 1; \
                ;; \
              *) \
                echo " configuring '$$b'"; \
                cp "$(DESTDIR)$(bindir)/$$f" "$(DESTDIR)$(bindir)/$$b" \
                ;; \
            esac; \
            rm -f "$(DESTDIR)$(bindir)/$$f"; \
          else :; fi; \
        done

uninstall-bin-scripts-hook:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS) $(bin_SCRIPTS)'; for p in $$list; do \
          b=`echo "$$p" | sed 's|^.*/||;s|.[^.]*$$||;$(transform)'`; \
          echo " rm -f '$(DESTDIR)$(bindir)/$$b'"; \
          rm -f "$(DESTDIR)$(bindir)/$$b"; \
        done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
